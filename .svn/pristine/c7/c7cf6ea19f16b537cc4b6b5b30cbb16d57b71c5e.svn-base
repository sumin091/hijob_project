package kr.happyjob.study.mngumg.controller;

import java.math.BigInteger;
import java.security.SecureRandom;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import kr.happyjob.study.mngcmg.model.MngCmgModel;
import kr.happyjob.study.mngumg.model.UserInfo;
import kr.happyjob.study.mngumg.service.MngUmgService;



@Controller

	public class MngUmgController {
	   // 커밋 테스트 됌 -동철
	
	
	// Set logger
	   private final Logger logger = LogManager.getLogger(this.getClass());
	
	   // Get class name for logger
	   private final String className = this.getClass().toString();
	   
	   
	   @Autowired
	   MngUmgService mngumgService;
	
	
	   /*회원정보수정*/
	   @RequestMapping("mdification.do")
	   @ResponseBody
	   public Map<String, Object> mdificationUser(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
				HttpServletResponse response, HttpSession session) throws Exception{
		   logger.info("+ Start " + className + ".mdificationUser");
		   logger.info("   - paramMap : " + paramMap);
			
		   String action = (String)paramMap.get("action");
		   String result = "SUCCESS";
		   String resultMsg;
		   
		   if("U".equals(action)) {
			   
			   mngumgService.mdificationUser(paramMap);
			   resultMsg = "수정 요청 완료";
		   } else {
			   
			   result = "FAIL";
			   resultMsg = "수정 요청 실패";
		   }

		   Map<String, Object> resultMap = new HashMap<String, Object>();
		   resultMap.put("result", result);
		   resultMap.put("resultMsg", resultMsg);
		   
		   logger.info("+ End " + className + ".mdificationUser");
		   
		   return resultMap;
	   }
	   
	   @RequestMapping("modifiselectone.do")
	   @ResponseBody
	   public Map<String, Object> compselectone(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
	         HttpServletResponse response, HttpSession session) throws Exception {
	      
	      logger.info("+ Start " + className + ".modifiselectone");
	      logger.info("   - paramMap : " + paramMap);
	      
	      // Controller  Service  Dao  SQL
	      UserInfo modifisearch = mngumgService.modifiselectone(paramMap);
	      
	      Map<String, Object> returnmap = new HashMap<String, Object>();
	      
	      returnmap.put("modifisearch",modifisearch);
	      
	      logger.info("+ End " + className + ".modifiselectone");

	      return returnmap;
	   }   
  

   
}
   
