package kr.happyjob.study.mngumg.controller;

import java.util.HashMap;
import java.util.Map;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.happyjob.study.mngumg.model.UserInfo;
import kr.happyjob.study.mngumg.service.MngUmgService;



@Controller
@RequestMapping("/mngumg/")
	public class MngUmgController {
	   // 커밋 테스트 됌 -동철
	
	
	// Set logger
	   private final Logger logger = LogManager.getLogger(this.getClass());
	
	   // Get class name for logger
	   private final String className = this.getClass().toString();
	   
	   
	   @Autowired
	   MngUmgService mngumgService;
	   
	   /**
	    * 초기화면
	    */      
	   @RequestMapping("member.do")
	   public String index(Model result, @RequestParam Map<String, String> paramMap, HttpServletRequest request,
		         HttpServletResponse response, HttpSession session) throws Exception {
		
		  logger.info("+ Start LoginController.member.do");
				
	      logger.info("+ End LoginController.member.do");
	      
	      return "mngumg/member";
	   }
  
	   /*유저 정보 조회*/
	   @RequestMapping("modifiselectone.do")
	   @ResponseBody
	   public Map<String, Object> modifiselectone(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
	         HttpServletResponse response, HttpSession session) throws Exception {
	      
	      logger.info("+ Start " + className + ".modifiselectone");
	      logger.info("   - paramMap : " + paramMap);
	      
	      // Controller  Service  Dao  SQL
	      UserInfo modifisearch = mngumgService.modifiselectone(paramMap);
	      
	      Map<String, Object> returnmap = new HashMap<String, Object>();
	      
	      returnmap.put("modifisearch",modifisearch);
	      
	      logger.info("+ End " + className + ".modifiselectone");

	      return returnmap;
	   }   
  
	   /* 회원 정보 수정 */
	   @RequestMapping("mdification.do")
	   @ResponseBody
	   public Map<String, Object> mdification(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
				HttpServletResponse response, HttpSession session) throws Exception{
		   
		   logger.info("+ Start " + className + ".mdification");
		   logger.info("   - paramMap : " + paramMap);
			
		   String action = (String)paramMap.get("action");
		   paramMap.put("loginid", (String) session.getAttribute("loginId"));
		   
		   
		   logger.info("   - ########### : " + action);
		   
		   logger.info("   - ########### : " + session);
		   
		   int returncval = 0;
		      
		      if("U".equals(action)) {
		    	  returncval = mngumgService.mdificationUser(paramMap);
		      }
		      
		      Map<String, Object> returnmap = new HashMap<String, Object>();
		      
		      returnmap.put("returncval", returncval);
		      
		      logger.info("+ End " + className + ".mdification");

		      return returnmap;
      }
	   
	   /*유저 비밀번호 조회*/
	   @RequestMapping("pwdconfirm.do")
	   @ResponseBody
	   public Map<String, Object> pwdconfirm(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
	         HttpServletResponse response, HttpSession session) throws Exception {
	      
	      logger.info("+ Start " + className + ".pwdconfirm");
	      logger.info("   - paramMap : " + paramMap);
	      
	      String loginID = (String) session.getAttribute("loginID");
	      paramMap.put("loginID", loginID);
	      
	      // Controller  Service  Dao  SQL
	      UserInfo passwordconfirm = mngumgService.pwdconfirm(paramMap);
	      
	      Map<String, Object> returnmap = new HashMap<String, Object>();
	      
	      returnmap.put("passwordconfirm",passwordconfirm);
	      
	      logger.info("+ End " + className + ".pwdconfirm");

	      return returnmap;
	   }
	   
	   /*비밀번호 변경*/
	   @RequestMapping("changepassword.do")
	   @ResponseBody
	   public Map<String, Object> changepassword(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
				HttpServletResponse response, HttpSession session) throws Exception{
		   
		   logger.info("+ Start " + className + ".changepassword");
		   logger.info("   - paramMap : " + paramMap);
			
		   String action = (String)paramMap.get("action");
		   paramMap.put("loginid", (String) session.getAttribute("loginId"));
		   
		   
		   logger.info("   - ########### : " + action);
		   
		   logger.info("   - ########### : " + session);
		   
		   int returncval = 0;
		      
		      if("U".equals(action)) {
		    	  returncval = mngumgService.changepwd(paramMap);
		      }
		      
		      Map<String, Object> returnmap = new HashMap<String, Object>();
		      
		      returnmap.put("returncval", returncval);
		      
		      logger.info("+ End " + className + ".changepassword");

		      return returnmap;
		   }
   
}
   
