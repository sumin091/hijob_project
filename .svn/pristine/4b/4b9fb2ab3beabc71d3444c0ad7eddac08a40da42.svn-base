package kr.happyjob.study.myppage.controller;

import java.io.File;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.PostConstruct;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.io.FileUtils;
import org.apache.log4j.LogManager;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.happyjob.study.common.comnUtils.ComnCodUtil;
import kr.happyjob.study.dashboard.model.DashboardModel;


@Controller
public class MyppageController {
	
/*@Autowired*/


	// Set logger
	private final Logger logger = LogManager.getLogger(this.getClass());

	// Get class name for logger
	private final String className = this.getClass().toString();


	//  마이페이지 첫 화면 + 회원 등급별, 아이디별로 개인페이지 연결
	@RequestMapping("/myppage/mypage.do")
	public String myppage(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {	
		
	      logger.info("+ Start " + className + ".myppage");
	      logger.info("   - paramMap : " + paramMap);
	      
	      // 화면을 보고있는 사람의 정보 담기
	      paramMap.put("loginID", session.getAttribute("loginId")); 
	      paramMap.put("user_type", session.getAttribute("userType"));
	      
	      logger.info("+ End " + className + ".myppage");

	     model.addAttribute("loginID", session.getAttribute("loginId"));
	     model.addAttribute("user_type", session.getAttribute("userType"));
	     
	     String userType = (String) session.getAttribute("userType");
	     String loginId = (String) session.getAttribute("loginId");
	      
	      String returnType = "/myppage/myppage";
	      
	      if("P".equals(userType)) {
	         returnType = "/myppage/myppagep";
	         
	      } else if("C".equals(userType)) {
	         returnType = "/myppage/myppagec";
	      }
	      logger.info("+ end " + className + ".initDashboard");
	     
	      return returnType;
	      
	}
	
//  마이페이지 채용현황 + 회원 등급별, 아이디별 연결
	@RequestMapping("/myppage/mypage_recruitstep.do")
	public String myppage_recruit(Model model, @RequestParam Map<String, Object> paramMap, HttpServletRequest request,
			HttpServletResponse response, HttpSession session) throws Exception {	
		
	      logger.info("+ Start " + className + ".myppage");
	      logger.info("   - paramMap : " + paramMap);
	      
	      // 화면을 보고있는 사람의 정보 담기
	      paramMap.put("loginID", session.getAttribute("loginId")); 
	      paramMap.put("user_type", session.getAttribute("userType"));
	      
	      logger.info("+ End " + className + ".myppage");

	     model.addAttribute("loginID", session.getAttribute("loginId"));
	     model.addAttribute("user_type", session.getAttribute("userType"));
	     
	     String userType = (String) session.getAttribute("userType");
	     String loginId = (String) session.getAttribute("loginId");
	      
	      String returnType = "/myppage/mypage_recruitstep";
	      
	      if("P".equals(userType)) {
	         returnType = "/myppage/myppagep_recruitstep";
	         
	      } else if("C".equals(userType)) {
	         returnType = "/myppage/myppagec_recruitstep";
	      }
	      logger.info("+ end " + className + ".initDashboard");
	     
	      return returnType;
	      
	}
}

